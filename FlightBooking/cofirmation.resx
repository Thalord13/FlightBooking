<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>